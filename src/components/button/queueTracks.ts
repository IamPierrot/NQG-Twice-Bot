import { MusicButtonComponent } from "../../component";

import { EmbedBuilder } from 'discord.js';
export = {
    name: "queueTracks",
    type: 'music',
    callback: async (client, interaction, customId, queue) => {
        if (!queue || !queue.isPlaying()) return interaction.editReply({ content: `M√¨nh ƒëang kh√¥ng h√°t b√†i n√†o m√†? ‚ùå` });

        const methods = ['', 'üîÅ', 'üîÇ'];

        const songs = queue.tracks.toArray().length;

        const nextSongs = songs > 5 ? `V√† **${songs - 5}** b√†i kh√°c n·ªØa...` : `ƒêang trong h√†ng ch·ªù ƒë∆∞·ª£c ph√°t l√† **${songs}** b√†i h√°t...`;

        const tracks = queue.tracks.map((track, i) => `**${i + 1}** - \`${track.title} | ${track.author}\` (Y√™u c·∫ßu b·ªüi : ${track.requestedBy?.toString()})`)

        const embed = new EmbedBuilder()
            .setColor('#2f3136')
            .setThumbnail(interaction.guild?.iconURL({ size: 2048 })!)
            .setAuthor({ name: `Danh s√°ch h√†ng ch·ªù - ${interaction.guild?.name}`, iconURL: client.user?.displayAvatarURL({ size: 1024 }) })
            .setDescription(`**ƒêang ph√°t:** ${queue.currentTrack?.toHyperlink()} ${methods[queue.repeatMode]}\n\n${tracks.slice(0, 5).join('\n')}\n\n${nextSongs}`)
            .setTimestamp()
            .setFooter({ text: '√Çm nh·∫°c ƒëi tr∆∞·ªõc - T√¨nh y√™u theo sau ‚ù§', iconURL: interaction.user.avatarURL()! })

        await interaction.editReply({ embeds: [embed] });
    },
} as const as MusicButtonComponent
