import { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } from "discord.js";
import { PrefixCommands } from "../../cmds";
import userModel from "../../database/models/userModel";
import balanceModel from "../../database/models/balanceModel";
import chatLevelModel from "../../database/models/chatLvModel";
import voiceLevelModel from "../../database/models/voiceLvModel";
import dailyModel from "../../database/models/dailyModel";

export = {
     name: "register",
     description: "t·∫°o th√¥ng tin ng∆∞·ªùi d√πng",
     aliases: ["pf", "cprofile", "taoprofile", "rg"],

     callback: async (client, message, args) => {

          const userData = await userModel.findOne({ userId: message.author.id });
          const balanceData = await balanceModel.findOne({ userId: message.author.id });
          const chatLvData = await chatLevelModel.findOne({ userId: message.author.id });
          const voiceLvData = await voiceLevelModel.findOne({ userId: message.author.id });
          const dailyData = await dailyModel.findOne({ userId: message.author.id });

          if (userData
               || balanceData
               || chatLvData
               || voiceLvData
               || dailyData
               ) return await message.reply({ embeds: [new EmbedBuilder().setAuthor({ name: "B·∫°n ƒë√£ t·∫°o t√†i kho·∫£n r·ªìi!" })] });

          const tosEmbed = new EmbedBuilder()
               .setColor("Red")
               .setTitle("**ƒêI·ªÄU KHO·∫¢N S·ª¨ D·ª§NG - BOT GAME V√Ä H·ªÜ TH·ªêNG KINH T·∫æ**")
               .setDescription(`
          <a:NA_GeneralUpdates:1166628301817786408> Vui l√≤ng ƒë·ªçc k·ªπ v√† hi·ªÉu r√µ c√°c ƒëi·ªÅu kho·∫£n sau tr∆∞·ªõc khi s·ª≠ d·ª•ng bot c·ªßa ch√∫ng t√¥i. B·∫±ng c√°ch s·ª≠ d·ª•ng bot, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß t·∫•t c·∫£ c√°c ƒëi·ªÅu kho·∫£n d∆∞·ªõi ƒë√¢y. N·∫øu b·∫°n kh√¥ng ƒë·ªìng √Ω v·ªõi b·∫•t k·ª≥ ƒëi·ªÅu kho·∫£n n√†o, vui l√≤ng kh√¥ng s·ª≠ d·ª•ng bot.<a:NA_GeneralUpdates:1166628301817786408>
    
                  **1. Gian l·∫≠n v√† ph·∫ßn m·ªÅm th·ª© 3: **
    
                  1.1. Ch√∫ng t√¥i kh√¥ng ch·∫•p nh·∫≠n ng∆∞·ªùi d√πng s·ª≠ d·ª•ng ph·∫ßn m·ªÅm th·ª© 3 d∆∞·ªõi m·ªçi h√¨nh th·ª©c.
    
                  1.2. Ph√°t hi·ªán v√† l·ª£i d·ª•ng bug c·ªßa bot cho m·ª•c ƒë√≠ch c√° nh√¢n s·∫Ω b·ªã BAN th·∫≥ng tay. 
                  
                  **2. S·ª± thay ƒë·ªïi v√† c·∫≠p nh·∫≠t: **

                  2.1 H√£y theo d√µi k√™nh <#1118050184312664094> th∆∞·ªùng xuy√™n ƒë·ªÉ bi·∫øt th√™m nh·ªØng c·∫≠p nh·∫≠t m·ªõi v·ªÅ bot.
                  
                  **Li√™n h·ªá:**
                  
                  <a:Glitch_warn:1166628298374266971> N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc ho·∫∑c b√°o l·ªói n√†o, vui l√≤ng li√™n h·ªá <@874321270437728257> ho·∫∑c <@942356413546635264>.
                `);
          const customId = "register";
          const tosBtn = new ButtonBuilder()
               .setCustomId(customId)
               .setLabel("Ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n")
               .setStyle(ButtonStyle.Primary)
               .setEmoji("üëç")

          const row = new ActionRowBuilder<ButtonBuilder>().addComponents(tosBtn);


          const a = await message.reply({
               content: "**## B·∫±ng c√°ch s·ª≠ d·ª•ng bot, b·∫°n x√°c nh·∫≠n ƒë√£ ƒë·ªçc, hi·ªÉu v√† ch·∫•p nh·∫≠n t·∫•t c·∫£ c√°c ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng. N·∫øu b·∫°n kh√¥ng ƒë·ªìng √Ω v·ªõi c√°c ƒëi·ªÅu kho·∫£n n√†y, vui l√≤ng kh√¥ng s·ª≠ d·ª•ng bot.**",
               embeds: [tosEmbed],
               components: [row],
          })

          client.userComponent.set(message.author.id, { custom_id: customId, msg: a });
          setTimeout(() => {
               a.delete().catch(() => function () { });
               client.userComponent.delete(message.author.id);
          }, 60000)
     }
} as const as PrefixCommands;